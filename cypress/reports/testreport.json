{
  "stats": {
    "suites": 2,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2020-11-30T23:15:41.222Z",
    "end": "2020-11-30T23:16:05.628Z",
    "duration": 24406,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4649c533-a983-4a6c-981d-c237fce5066a",
      "title": "",
      "fullFile": "cypress/integration/event-signup-flow.spec.js",
      "file": "cypress/integration/event-signup-flow.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "10838f1c-46f2-4770-b9d0-3354e2b87916",
          "title": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time)",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It shows the Search for events page",
              "fullTitle": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time) It shows the Search for events page",
              "timedOut": null,
              "duration": 2338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchForEvent.getSearchforEventsHeading().should(\"exist\").should(\"have.text\", \"Search for events\");",
              "err": {},
              "uuid": "f86afe7a-e768-4390-8b2b-0814bbce5af2",
              "parentUUID": "10838f1c-46f2-4770-b9d0-3354e2b87916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It shows the Sign up for this event page",
              "fullTitle": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time) It shows the Sign up for this event page",
              "timedOut": null,
              "duration": 2181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchForEvent.getEventsType().select(this.testData.eventsType);\nsearchForEvent.getEventLocation().select(this.testData.eventLocation);\nsearchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n  cy.get(\"@month\").select(option.text());\n});\nsearchForEvent.getUpdateResultsButton().click();\ncy.get(\"body\").then(function (body) {\n  if (body.find(\".search-for-events-no-results\").length > 0) {\n    cy.get(\".search-for-events-no-results\").should(\"include.text\", \"Sorry your search has not found any events, try a different type, location or month.\");\n  } else {\n    eventSignup.getSearchedEventName().first().then(function (eventName) {\n      cy.contains(eventName.text().trim()).click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n    });\n  }\n});",
              "err": {},
              "uuid": "1c517af1-735b-4652-ab75-41fdbc59619c",
              "parentUUID": "10838f1c-46f2-4770-b9d0-3354e2b87916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It shows the Sign up complete message - for new candidate who doesn't like to receive email updates",
              "fullTitle": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time) It shows the Sign up complete message - for new candidate who doesn't like to receive email updates",
              "timedOut": null,
              "duration": 1679,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var signedUpeventName;\nsearchForEvent.getEventsType().select(this.testData.eventsType);\nsearchForEvent.getEventLocation().select(this.testData.eventLocation);\nsearchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n  cy.get(\"@month\").select(option.text());\n});\nsearchForEvent.getUpdateResultsButton().click();\ncy.get(\"body\").then(function (body) {\n  if (body.find(\".search-for-events-no-results\").length > 0) {\n    cy.get(\".search-for-events-no-results\").should(\"include.text\", \"Sorry your search has not found any events, try a different type, location or month.\");\n  } else {\n    eventSignup.getSearchedEventName().first().then(function (eventName) {\n      eventSignup.getSearchedEventName().first().click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      signedUpeventName = eventName.text().trim();\n      eventSignup.getFirstName().type(this.testData.firstName);\n      eventSignup.getLastName().type(this.testData.lastName);\n      var rnum = Math.floor(Math.random() * 1000000 + 1);\n      var email = \"testuser\" + rnum.toString() + \"@gmail.co.uk\";\n      eventSignup.getEmail().type(email);\n      eventSignup.getNextStep().click();\n      eventSignup.getBackButton().should(\"exist\").should(\"have.text\", \"Back\");\n      eventSignup.getPhoneNumber().type(this.testData.phoneNumber);\n      eventSignup.getNextStep().click();\n      eventSignup.getPrivacyPolicy().click();\n      cy.wouldYouLikeToReceiveEmailUpdate(\"No\");\n      eventSignup.getSignupCompleteMessage().should(\"have.text\", \"Sign up complete\");\n      eventSignup.getSignupEventName().should(\"have.text\", signedUpeventName);\n    });\n  }\n});",
              "err": {},
              "uuid": "99e09e54-805d-4372-b02c-dc1a2092dc7d",
              "parentUUID": "10838f1c-46f2-4770-b9d0-3354e2b87916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It shows the Sign up complete message - for new candidate who like to receive email updates",
              "fullTitle": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time) It shows the Sign up complete message - for new candidate who like to receive email updates",
              "timedOut": null,
              "duration": 1924,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Scenario - candidate who like to receive email updateslike to receive email updates\nvar signedUpeventName;\nsearchForEvent.getEventsType().select(this.testData.eventsType);\nsearchForEvent.getEventLocation().select(this.testData.eventLocation);\nsearchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n  cy.get(\"@month\").select(option.text());\n});\nsearchForEvent.getUpdateResultsButton().click();\ncy.get(\"body\").then(function (body) {\n  if (body.find(\".search-for-events-no-results\").length > 0) {\n    cy.get(\".search-for-events-no-results\").should(\"include.text\", \"Sorry your search has not found any events, try a different type, location or month.\");\n  } else {\n    eventSignup.getSearchedEventName().eq(0).then(function (eventName) {\n      eventSignup.getSearchedEventName().eq(0).click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      signedUpeventName = eventName.text().trim();\n      eventSignup.getFirstName().type(this.testData.firstName);\n      eventSignup.getLastName().type(this.testData.lastName);\n      var rnum = Math.floor(Math.random() * 1000000 + 1);\n      var email = \"testuser\" + rnum.toString() + \"@gmail.co.uk\";\n      eventSignup.getEmail().type(email);\n      eventSignup.getNextStep().click();\n      eventSignup.getBackButton().should(\"exist\").should(\"have.text\", \"Back\");\n      eventSignup.getPhoneNumber().type(this.testData.phoneNumber);\n      eventSignup.getNextStep().click();\n      eventSignup.getPrivacyPolicy().click();\n      cy.wouldYouLikeToReceiveEmailUpdate(\"Yes\");\n      eventSignup.getNextStep().click();\n      cy.get(\"#events-steps-personalised-updates-degree-status-id-field\").select(\"Final year\");\n      cy.get(\"#events-steps-personalised-updates-consideration-journey-stage-id-field\").select(\"Iâ€™m fairly sure and exploring my options\");\n      cy.get(\"#events-steps-personalised-updates-preferred-teaching-subject-id-field\").select(\"English\");\n      eventSignup.getCompleteSignup().click();\n      eventSignup.getSignupCompleteMessage().should(\"have.text\", \"Sign up complete\");\n      eventSignup.getSignupEventName().should(\"have.text\", signedUpeventName);\n    });\n  }\n});",
              "err": {},
              "uuid": "12187207-2613-42c5-bb60-82b9426d87ba",
              "parentUUID": "10838f1c-46f2-4770-b9d0-3354e2b87916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It shows the Sign up complete message - for existing candidate",
              "fullTitle": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time) It shows the Sign up complete message - for existing candidate",
              "timedOut": null,
              "duration": 1681,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _this2 = this;\nvar signedUpeventName;\nvar rnum = Math.floor(Math.random() * 1000000 + 1);\nvar firstName = \"User_\" + rnum + \"_firstname\";\nvar lastName = \"User_\" + rnum + \"_lastname\";\nsearchForEvent.getEventsType().select(this.testData.eventsType);\nsearchForEvent.getEventLocation().select(this.testData.eventLocation);\nsearchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n  cy.get(\"@month\").select(option.text());\n});\nsearchForEvent.getUpdateResultsButton().click();\ncy.get(\"body\").then(function (body) {\n  if (body.find(\".search-for-events-no-results\").length > 0) {\n    cy.get(\".search-for-events-no-results\").should(\"include.text\", \"Sorry your search has not found any events, try a different type, location or month.\");\n  } else {\n    eventSignup.getSearchedEventName().eq(0).then(function (eventName) {\n      eventSignup.getSearchedEventName().eq(0).click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      signedUpeventName = eventName.text().trim();\n      eventSignup.getFirstName().type(firstName);\n      eventSignup.getLastName().type(lastName);\n      eventSignup.getEmail().type(this.testData.email);\n      eventSignup.getNextStep().click();\n      eventSignup.getBackButton().should(\"exist\").should(\"have.text\", \"Back\");\n      eventSignup.getPhoneNumber().type(this.testData.phoneNumber);\n      eventSignup.getNextStep().click();\n      eventSignup.getPrivacyPolicy().click();\n      cy.wouldYouLikeToReceiveEmailUpdate(\"Yes\");\n      eventSignup.getNextStep().click();\n      cy.get(\"#events-steps-personalised-updates-degree-status-id-field\").select(\"Final year\");\n      cy.get(\"#events-steps-personalised-updates-consideration-journey-stage-id-field\").select(\"Iâ€™m fairly sure and exploring my options\");\n      cy.get(\"#events-steps-personalised-updates-preferred-teaching-subject-id-field\").select(\"English\");\n      eventSignup.getCompleteSignup().click();\n      eventSignup.getSignupCompleteMessage().should(\"have.text\", \"Sign up complete\");\n      eventSignup.getSignupEventName().should(\"have.text\", signedUpeventName);\n      eventSignup.getSignupEventName().next().next().should(\"have.text\", \"You've also signed up for email updates\");\n    });\n    cy.contains(\"Find an event near you\").click();\n    searchForEvent.getEventsType().select(_this2.testData.eventsType);\n    searchForEvent.getEventLocation().select(_this2.testData.eventLocation);\n    searchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n      cy.get(\"@month\").select(option.text());\n    });\n    searchForEvent.getUpdateResultsButton().click();\n    eventSignup.getSearchedEventName().first().then(function (eventName) {\n      cy.contains(eventName.text().trim()).click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      signedUpeventName = eventName.text().trim();\n      eventSignup.getFirstName().type(firstName);\n      eventSignup.getLastName().type(lastName);\n      eventSignup.getEmail().type(this.testData.email);\n      eventSignup.getNextStep().click();\n      cy.enterEmailVerificationCode();\n      eventSignup.getNextStep().click();\n      eventSignup.getBackButton().should(\"exist\").should(\"have.text\", \"Back\");\n      cy.log(this.testData.phoneNumber);\n      eventSignup.getPhoneNumber().clear();\n      eventSignup.getPhoneNumber().type(this.testData.phoneNumber);\n      eventSignup.getNextStep().click();\n      eventSignup.getPrivacyPolicy().click();\n      eventSignup.getCompleteSignup().click();\n      eventSignup.getSignupCompleteMessage().should(\"have.text\", \"Sign up complete\");\n      eventSignup.getSignupEventName().should(\"have.text\", signedUpeventName);\n    });\n  }\n});",
              "err": {},
              "uuid": "f9da8812-7812-46d5-b9bf-73c3822021f3",
              "parentUUID": "10838f1c-46f2-4770-b9d0-3354e2b87916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It sends the another email evrification code if user clicks on \"resend verification\" link",
              "fullTitle": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time) It sends the another email evrification code if user clicks on \"resend verification\" link",
              "timedOut": null,
              "duration": 1594,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _this3 = this;\nvar signedUpeventName;\nvar rnum = Math.floor(Math.random() * 1000000 + 1);\nvar firstName = \"User_\" + rnum + \"_firstname\";\nvar lastName = \"User_\" + rnum + \"_lastname\";\nsearchForEvent.getEventsType().select(this.testData.eventsType);\nsearchForEvent.getEventLocation().select(this.testData.eventLocation);\nsearchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n  cy.get(\"@month\").select(option.text());\n});\nsearchForEvent.getUpdateResultsButton().click();\ncy.get(\"body\").then(function (body) {\n  if (body.find(\".search-for-events-no-results\").length > 0) {\n    cy.get(\".search-for-events-no-results\").should(\"include.text\", \"Sorry your search has not found any events, try a different type, location or month.\");\n  } else {\n    eventSignup.getSearchedEventName().first().then(function (eventName) {\n      eventSignup.getSearchedEventName().first().click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      signedUpeventName = eventName.text().trim();\n      eventSignup.getFirstName().type(firstName);\n      eventSignup.getLastName().type(lastName);\n      eventSignup.getEmail().type(this.testData.email);\n      eventSignup.getNextStep().click();\n      eventSignup.getBackButton().should(\"exist\").should(\"have.text\", \"Back\");\n      eventSignup.getPhoneNumber().type(this.testData.phoneNumber);\n      eventSignup.getNextStep().click();\n      eventSignup.getPrivacyPolicy().click();\n      cy.wouldYouLikeToReceiveEmailUpdate(\"Yes\");\n      eventSignup.getNextStep().click();\n      cy.get(\"#events-steps-personalised-updates-degree-status-id-field\").select(\"Final year\");\n      cy.get(\"#events-steps-personalised-updates-consideration-journey-stage-id-field\").select(\"Iâ€™m fairly sure and exploring my options\");\n      cy.get(\"#events-steps-personalised-updates-preferred-teaching-subject-id-field\").select(\"English\");\n      eventSignup.getCompleteSignup().click();\n      eventSignup.getSignupCompleteMessage().should(\"have.text\", \"Sign up complete\");\n      eventSignup.getSignupEventName().should(\"have.text\", signedUpeventName);\n      eventSignup.getSignupEventName().next().next().should(\"have.text\", \"You've also signed up for email updates\");\n    });\n    cy.contains(\"Find an event near you\").click();\n    searchForEvent.getEventsType().select(_this3.testData.eventsType);\n    searchForEvent.getEventLocation().select(_this3.testData.eventLocation);\n    searchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n      cy.get(\"@month\").select(option.text());\n    });\n    searchForEvent.getUpdateResultsButton().click();\n    eventSignup.getSearchedEventName().first().then(function (eventName) {\n      cy.contains(eventName.text().trim()).click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      signedUpeventName = eventName.text().trim();\n      eventSignup.getFirstName().type(firstName);\n      eventSignup.getLastName().type(lastName);\n      eventSignup.getEmail().type(this.testData.email);\n      eventSignup.getNextStep().click();\n      cy.enterVerificationCode(\"123456\");\n      eventSignup.getNextStep().click();\n      eventSignup.getErrorTitle().should(\"exist\").should(\"have.text\", \"There is a problem\");\n      eventSignup.getResendVerificationLink().click();\n      cy.enterEmailVerificationCode();\n      eventSignup.getNextStep().click();\n      eventSignup.getBackButton().should(\"exist\").should(\"have.text\", \"Back\");\n      cy.log(this.testData.phoneNumber);\n      eventSignup.getPhoneNumber().clear();\n      eventSignup.getPhoneNumber().type(this.testData.phoneNumber);\n      eventSignup.getNextStep().click();\n      eventSignup.getPrivacyPolicy().click();\n      eventSignup.getCompleteSignup().click();\n      eventSignup.getSignupCompleteMessage().should(\"have.text\", \"Sign up complete\");\n      eventSignup.getSignupEventName().should(\"have.text\", signedUpeventName);\n    });\n  }\n});",
              "err": {},
              "uuid": "b46d2090-96c2-49b8-bcf2-fce5818ce678",
              "parentUUID": "10838f1c-46f2-4770-b9d0-3354e2b87916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It shows error message if user enters wrong email verification code",
              "fullTitle": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time) It shows error message if user enters wrong email verification code",
              "timedOut": null,
              "duration": 1727,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _this4 = this;\nvar signedUpeventName;\nvar error = false;\nvar rnum = Math.floor(Math.random() * 1000000 + 1);\nvar firstName = \"User_\" + rnum + \"_firstname\";\nvar lastName = \"User_\" + rnum + \"_lastname\";\nsearchForEvent.getEventsType().select(this.testData.eventsType);\nsearchForEvent.getEventLocation().select(this.testData.eventLocation);\nsearchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n  cy.get(\"@month\").select(option.text());\n});\nsearchForEvent.getUpdateResultsButton().click();\ncy.get(\"body\").then(function (body) {\n  if (body.find(\".search-for-events-no-results\").length > 0) {\n    cy.get(\".search-for-events-no-results\").should(\"include.text\", \"Sorry your search has not found any events, try a different type, location or month.\");\n  } else {\n    eventSignup.getSearchedEventName().first().then(function (eventName) {\n      eventSignup.getSearchedEventName().first().click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      signedUpeventName = eventName.text().trim();\n      eventSignup.getFirstName().type(firstName);\n      eventSignup.getLastName().type(lastName);\n      eventSignup.getEmail().type(this.testData.email);\n      eventSignup.getNextStep().click();\n      eventSignup.getBackButton().should(\"exist\").should(\"have.text\", \"Back\");\n      eventSignup.getPhoneNumber().type(this.testData.phoneNumber);\n      eventSignup.getNextStep().click();\n      eventSignup.getPrivacyPolicy().click();\n      cy.wouldYouLikeToReceiveEmailUpdate(\"Yes\");\n      eventSignup.getNextStep().click();\n      cy.get(\"#events-steps-personalised-updates-degree-status-id-field\").select(\"Final year\");\n      cy.get(\"#events-steps-personalised-updates-consideration-journey-stage-id-field\").select(\"Iâ€™m fairly sure and exploring my options\");\n      cy.get(\"#events-steps-personalised-updates-preferred-teaching-subject-id-field\").select(\"English\");\n      eventSignup.getCompleteSignup().click();\n      eventSignup.getSignupCompleteMessage().should(\"have.text\", \"Sign up complete\");\n      eventSignup.getSignupEventName().should(\"have.text\", signedUpeventName);\n      eventSignup.getSignupEventName().next().next().should(\"have.text\", \"You've also signed up for email updates\");\n    });\n    cy.contains(\"Find an event near you\").click();\n    searchForEvent.getEventsType().select(_this4.testData.eventsType);\n    searchForEvent.getEventLocation().select(_this4.testData.eventLocation);\n    searchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n      cy.get(\"@month\").select(option.text());\n    });\n    searchForEvent.getUpdateResultsButton().click();\n    eventSignup.getSearchedEventName().first().then(function (eventName) {\n      cy.contains(eventName.text().trim()).click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      signedUpeventName = eventName.text().trim();\n      eventSignup.getFirstName().type(firstName);\n      eventSignup.getLastName().type(lastName);\n      eventSignup.getEmail().type(this.testData.email);\n      eventSignup.getNextStep().click();\n      cy.enterVerificationCode(\"12345\", error = false);\n      eventSignup.getNextStep().click();\n      eventSignup.getErrorTitle().should(\"exist\").should(\"have.text\", \"There is a problem\");\n      cy.get(\".govuk-list > li > a\").should(\"exist\").should(\"have.text\", \"The verification code should be 6 digits\");\n      cy.enterVerificationCode(\"1234567\", true);\n      eventSignup.getNextStep().click();\n      eventSignup.getErrorTitle().should(\"exist\").should(\"have.text\", \"There is a problem\");\n      cy.get(\".govuk-list > li > a\").should(\"exist\").should(\"have.text\", \"The verification code should be 6 digits\");\n      cy.enterVerificationCode(\"123456\", true);\n      eventSignup.getNextStep().click();\n      eventSignup.getErrorTitle().should(\"exist\").should(\"have.text\", \"There is a problem\");\n      cy.get(\".govuk-list > li > a\").should(\"exist\").should(\"have.text\", \"Please enter the latest verification code sent to your email address\");\n      cy.get(\"#events-steps-authenticate-timed-one-time-password-error\").should(\"exist\").should(\"have.text\", \"Error: Please enter the latest verification code sent to your email address\");\n    });\n  }\n});",
              "err": {},
              "uuid": "8b03728a-1dab-4317-a542-6a3f3043bf4a",
              "parentUUID": "10838f1c-46f2-4770-b9d0-3354e2b87916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It shows the error message if user clicks next button without entering the mandatory details",
              "fullTitle": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time) It shows the error message if user clicks next button without entering the mandatory details",
              "timedOut": null,
              "duration": 1941,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchForEvent.getEventsType().select(this.testData.eventsType);\nsearchForEvent.getEventLocation().select(this.testData.eventLocation);\nsearchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n  cy.get(\"@month\").select(option.text());\n});\nsearchForEvent.getUpdateResultsButton().click();\ncy.get(\"body\").then(function (body) {\n  if (body.find(\".search-for-events-no-results\").length > 0) {\n    cy.get(\".search-for-events-no-results\").should(\"include.text\", \"Sorry your search has not found any events, try a different type, location or month.\");\n  } else {\n    eventSignup.getSearchedEventName().first().then(function (eventName) {\n      cy.contains(eventName.text().trim()).click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      eventSignup.getNextStep().click();\n      eventSignup.getErrorTitle().should(\"exist\").should(\"have.text\", \"There is a problem\");\n      cy.get(\".govuk-error-summary__list\").children().should(\"exist\").next().should(\"exist\").next().should(\"exist\");\n      cy.get(\".govuk-list.govuk-error-summary__list > li:nth-child(1)\").should(\"have.text\", \"Enter your full email address\").next().should(\"have.text\", \"Enter your first name\").next().should(\"have.text\", \"Enter your last name\");\n    });\n  }\n});",
              "err": {},
              "uuid": "dbbffc63-41bf-4b7a-8263-0d799e7369c8",
              "parentUUID": "10838f1c-46f2-4770-b9d0-3354e2b87916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Error message link navigates to its respective field",
              "fullTitle": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time) Error message link navigates to its respective field",
              "timedOut": null,
              "duration": 1831,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchForEvent.getEventsType().select(this.testData.eventsType);\nsearchForEvent.getEventLocation().select(this.testData.eventLocation);\nsearchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n  cy.get(\"@month\").select(option.text());\n});\nsearchForEvent.getUpdateResultsButton().click();\ncy.get(\"body\").then(function (body) {\n  if (body.find(\".search-for-events-no-results\").length > 0) {\n    cy.get(\".search-for-events-no-results\").should(\"include.text\", \"Sorry your search has not found any events, try a different type, location or month.\");\n  } else {\n    eventSignup.getSearchedEventName().first().then(function (eventName) {\n      cy.contains(eventName.text().trim()).click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      eventSignup.getNextStep().click();\n      cy.contains(\"Enter your full email address\").should(function (el) {\n        expect(el).to.have.attr(\"href\", \"#events-steps-personal-details-email-field-error\");\n      }).click().type(\"Test_email@gmail.com\");\n      eventSignup.getNextStep().click();\n      cy.get(\".govuk-list.govuk-error-summary__list > li:nth-child(1)\").should(\"have.text\", \"Enter your first name\").next().should(\"have.text\", \"Enter your last name\");\n      cy.contains(\"Enter your first name\").should(function (el) {\n        expect(el).to.have.attr(\"href\", \"#events-steps-personal-details-first-name-field-error\");\n      }).click().type(\"Test_First_Name\");\n      eventSignup.getNextStep().click();\n      cy.get(\".govuk-list.govuk-error-summary__list > li:nth-child(1)\").should(\"have.text\", \"Enter your last name\");\n      cy.contains(\"Enter your last name\").should(function (el) {\n        expect(el).to.have.attr(\"href\", \"#events-steps-personal-details-last-name-field-error\");\n      }).click().type(\"Test_Last_Name\");\n      eventSignup.getNextStep().click();\n    });\n    cy.get(\".govuk-back-link\").should(\"exist\").should(\"have.text\", \"Back\");\n  }\n});",
              "err": {},
              "uuid": "6da00235-520a-471d-9f1e-f2b408c60c3a",
              "parentUUID": "10838f1c-46f2-4770-b9d0-3354e2b87916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Links through to feedback survey page",
              "fullTitle": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time) Links through to feedback survey page",
              "timedOut": null,
              "duration": 2014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var signedUpeventName;\nsearchForEvent.getEventsType().select(this.testData.eventsType);\nsearchForEvent.getEventLocation().select(this.testData.eventLocation);\nsearchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n  cy.get(\"@month\").select(option.text());\n});\nsearchForEvent.getUpdateResultsButton().click();\ncy.get(\"body\").then(function (body) {\n  if (body.find(\".search-for-events-no-results\").length > 0) {\n    cy.get(\".search-for-events-no-results\").should(\"include.text\", \"Sorry your search has not found any events, try a different type, location or month.\");\n  } else {\n    eventSignup.getSearchedEventName().first().then(function (eventName) {\n      eventSignup.getSearchedEventName().first().click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      signedUpeventName = eventName.text().trim();\n      eventSignup.getFirstName().type(this.testData.firstName);\n      eventSignup.getLastName().type(this.testData.lastName);\n      var rnum = Math.floor(Math.random() * 1000000 + 1);\n      var email = \"testuser\" + rnum.toString() + \"@gmail.co.uk\";\n      eventSignup.getEmail().type(email);\n      eventSignup.getNextStep().click();\n      eventSignup.getBackButton().should(\"exist\").should(\"have.text\", \"Back\");\n      eventSignup.getPhoneNumber().type(this.testData.phoneNumber);\n      eventSignup.getNextStep().click();\n      eventSignup.getPrivacyPolicy().click();\n      cy.wouldYouLikeToReceiveEmailUpdate(\"No\");\n      eventSignup.getSignupCompleteMessage().should(\"have.text\", \"Sign up complete\");\n      eventSignup.getSignupEventName().should(\"have.text\", signedUpeventName);\n    });\n    cy.contains(\"a\", \"feedback on this website\").invoke(\"removeAttr\", \"target\").click();\n    cy.get(\".freebirdFormviewerViewHeaderTitle\").should(\"exist\").should(\"have.text\", \"Get into Teaching: Feedback Survey\");\n  }\n});",
              "err": {},
              "uuid": "f452758c-b842-4458-8fd4-bb83ea91c2f0",
              "parentUUID": "10838f1c-46f2-4770-b9d0-3354e2b87916",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "It hides the feedback bar if user clicks on \"Hide\" link",
              "fullTitle": "Feature - Event sign up : Tests execution date and time : Mon Nov 30 2020 23:15:40 GMT+0000 (Coordinated Universal Time) It hides the feedback bar if user clicks on \"Hide\" link",
              "timedOut": null,
              "duration": 2465,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var signedUpeventName;\nsearchForEvent.getEventsType().select(this.testData.eventsType);\nsearchForEvent.getEventLocation().select(this.testData.eventLocation);\nsearchForEvent.getEventsMonth().as(\"month\").children().first().then(function (option) {\n  cy.get(\"@month\").select(option.text());\n});\nsearchForEvent.getUpdateResultsButton().click();\ncy.get(\"body\").then(function (body) {\n  if (body.find(\".search-for-events-no-results\").length > 0) {\n    cy.get(\".search-for-events-no-results\").should(\"include.text\", \"Sorry your search has not found any events, try a different type, location or month.\");\n  } else {\n    eventSignup.getSearchedEventName().first().then(function (eventName) {\n      eventSignup.getSearchedEventName().first().click();\n      eventSignup.getSignupForThisEventButton().click();\n      eventSignup.getEventNameHeader().should(\"have.text\", eventName.text().trim());\n      signedUpeventName = eventName.text().trim();\n      eventSignup.getFirstName().type(this.testData.firstName);\n      eventSignup.getLastName().type(this.testData.lastName);\n      var rnum = Math.floor(Math.random() * 1000000 + 1);\n      var email = \"testuser\" + rnum.toString() + \"@gmail.co.uk\";\n      eventSignup.getEmail().type(email);\n      eventSignup.getNextStep().click();\n      eventSignup.getBackButton().should(\"exist\").should(\"have.text\", \"Back\");\n      eventSignup.getPhoneNumber().type(this.testData.phoneNumber);\n      eventSignup.getNextStep().click();\n      eventSignup.getPrivacyPolicy().click();\n      cy.wouldYouLikeToReceiveEmailUpdate(\"No\");\n      eventSignup.getSignupCompleteMessage().should(\"have.text\", \"Sign up complete\");\n      eventSignup.getSignupEventName().should(\"have.text\", signedUpeventName);\n    });\n    cy.get(\"#hide-feedback-bar\").click();\n    cy.contains(\"a\", \"feedback on this website\").should(\"not.be.visible\");\n  }\n});",
              "err": {},
              "uuid": "bc1eeb4f-6014-40d3-81c6-8f2f9fa9e704",
              "parentUUID": "10838f1c-46f2-4770-b9d0-3354e2b87916",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f86afe7a-e768-4390-8b2b-0814bbce5af2",
            "1c517af1-735b-4652-ab75-41fdbc59619c",
            "99e09e54-805d-4372-b02c-dc1a2092dc7d",
            "12187207-2613-42c5-bb60-82b9426d87ba",
            "f9da8812-7812-46d5-b9bf-73c3822021f3",
            "b46d2090-96c2-49b8-bcf2-fce5818ce678",
            "8b03728a-1dab-4317-a542-6a3f3043bf4a",
            "dbbffc63-41bf-4b7a-8263-0d799e7369c8",
            "6da00235-520a-471d-9f1e-f2b408c60c3a",
            "f452758c-b842-4458-8fd4-bb83ea91c2f0",
            "bc1eeb4f-6014-40d3-81c6-8f2f9fa9e704"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f5e16e4d-6c76-4953-824e-fb871368245a",
          "title": "Feature - 404 Not Found unknown_route : Mon Nov 30 2020 23:16:05 GMT+0000 (Coordinated Universal Time)",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "It should show \"404\tNot Found unknown_route\" if the user enters a bad URL",
              "fullTitle": "Feature - 404 Not Found unknown_route : Mon Nov 30 2020 23:16:05 GMT+0000 (Coordinated Universal Time) It should show \"404\tNot Found unknown_route\" if the user enters a bad URL",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit({\n  url: \"https://get-into-teaching-apps-test.london.cloudapps.digital/events\",\n  method: \"GET\",\n  failOnStatusCode: false\n});\ncy.verify404ErrorMessage();",
              "err": {},
              "uuid": "6b2862c6-eeee-4fea-9f5a-ad194f9cb91c",
              "parentUUID": "f5e16e4d-6c76-4953-824e-fb871368245a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b2862c6-eeee-4fea-9f5a-ad194f9cb91c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 236,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testreport",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "reportFilename": "testreport",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.1.0"
    }
  }
}