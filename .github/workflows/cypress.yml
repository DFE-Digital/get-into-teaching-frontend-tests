---
name: Cypress
on:
  workflow_dispatch:
    inputs:
      application:
        description: 'BOTH APP or TTA'
        required: true
        default:  'BOTH'

  schedule:
    - cron: "0 23 * * *"
jobs:
  cypress:
    name: Run Cypress Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # doesn't stop other specs runs even if one fails
      matrix:
        spec: [teacher-training-adviser, mailinglist-signup-flow, homepage-smoke, homepage-smoke]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Ensure latest version of image
        run:  docker pull dfedigital/dfecypress:latest
        
      - name:   Run ${{ matrix.spec}} Spec
        if:  github.event.inputs.application == 'TTA' || github.event_name == 'schedule' || github.event.inputs.application == 'BOTH' 
        run: |
          docker run -i --shm-size=1g   -e CYPRESS_HTTPAUTH_PASSWORD -e CYPRESS_HTTPAUTH_USERNAME  -v $PWD:/test -w /test  dfedigital/dfecypress:latest \
                             --spec cypress/integration/${{ matrix.spec}}.spec.js --headless --browser chrome 
        env:
              CYPRESS_HTTPAUTH_PASSWORD: "${{ secrets.HTTPAUTH_PASSWORD }}"
              CYPRESS_HTTPAUTH_USERNAME: "${{ secrets.HTTPAUTH_USERNAME }}"
        
      - name: Upload reports artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Reports
          path: ./cypress/reports/
          if-no-files-found: ignore

      - name: Upload video artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Videos
          path: ./cypress/videos/
          if-no-files-found: ignore 
          
      - name: Upload screenshot artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Screenshots
          path: ./cypress/screenshots/
          if-no-files-found: ignore

      - name: Count Failures
        id:  failures
        if: always()
        run: |
            cat ./cypress/reports/*.json | jq  -r ".results[].suites[].tests[] | {title , pass} | select(.pass=="false" ) | .title" > /tmp/$$.tmp
            if [[ $(cat /tmp/$$.tmp | wc -l) -gt 0  ]]
            then
                 echo ::set-output name=number::$(cat /tmp/$$.tmp | wc -l)
                 echo ::set-output name=errors::"$( cat /tmp/$$.tmp)"
                 exit 1
            fi
            exit 0

      - name: Slack Notification
        if: failure()
        uses: rtCamp/action-slack-notify@master
        env:
           SLACK_CHANNEL: getintoteaching_tech
           SLACK_COLOR: '#3278BD'
           SLACK_ICON: https://github.com/rtCamp.png?size=48
           SLACK_MESSAGE: |
                           ${{steps.failures.outputs.number}} Cypress tests have failed

                           ${{steps.failures.outputs.errors}}
           SLACK_TITLE: 'Failure: Cypress tests'
           SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
