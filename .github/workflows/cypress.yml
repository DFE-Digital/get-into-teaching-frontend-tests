---
name: Cypress
on:
  workflow_dispatch:
    inputs:
      application:
        description: 'BOTH APP or TTA'
        required: true
        default:  'BOTH'
      reference:
        description: 'Entered by automation only'
        required: true
        default:  'Cypress'   

  schedule:
    - cron: "0 23 * * *"
jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      tests: ${{ steps.select-tests.outputs.tests }}
    steps:
            
      - name: Select Tests
        id: select-tests
        run: |
             if  [[ "${{github.event_name}}" == "schedule"  ]]
             then
                   tests='{"tests":[ "non-regression-tests-suite/teacher-training-adviser", "non-regression-tests-suite/mailinglist-signup-flow", "non-regression-tests-suite/homepage", "non-regression-tests-suite/event-signup-flow" ]}' 
             elif  [[ "${{github.event.inputs.application}}" == "APP" ]] 
             then
                   tests='{"tests":[ "regression-tests-suite/mailinglist-signup-flow", "regression-tests-suite/homepage", "regression-tests-suite/event-signup-flow" ]}' 
             elif  [[ "${{github.event.inputs.application}}" == "TTA"  ]]
             then
                   tests='{"tests":[ "regression-tests-suite/teacher-training-adviser"]}' 
             elif  [[ "${{github.event.inputs.application}}" == "BOTH" ]]
             then
                   tests='{"tests":[ "regression-tests-suite/teacher-training-adviser", "regression-tests-suite/mailinglist-signup-flow", "regression-tests-suite/homepage", "regression-tests-suite/event-signup-flow" ]}' 
             else
                   exit 1
             fi
             echo ${tests}
             echo "::set-output name=tests::${tests}"

  RunTests:
    name: ${{matrix.tests}}
    runs-on: ubuntu-latest
    environment: Test
    needs: set-matrix
    strategy:
      fail-fast: false # doesn't stop other test runs even if one fails
      matrix: ${{ fromJson(needs.set-matrix.outputs.tests) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: set-up-environment
        uses: DFE-Digital/github-actions/set-up-environment@master

      - uses: Azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}

      - uses: Azure/get-keyvault-secrets@v1
        id:   azSecret
        with:
           keyvault: ${{ secrets.KEY_VAULT}}
           secrets: 'SLACK-WEBHOOK, HTTP-USERNAME, HTTP-PASSWORD'

      - name: Set Configuration
        id:   config
        run: |
            echo "::set-output name=basename::$(basename ${{matrix.tests}} )"
            echo "::set-output name=videos::${PWD}/${{matrix.tests}}/videos"
            echo "::set-output name=screenshots::${PWD}/${{matrix.tests}}/screenshots"
            echo "::set-output name=reports::${PWD}/${{matrix.tests}}/reports"

      - name: Run ${{ matrix.tests }} Test
        run: |
              docker run -i --shm-size=1g -e CYPRESS_SPEC -e CYPRESS_HTTPAUTH_PASSWORD -e CYPRESS_HTTPAUTH_USERNAME \
                                   -v $PWD:/test -w /test  \
                                   -v ${{steps.config.outputs.screenshots}}:/test/cypress/screenshots   \
                                   -v ${{steps.config.outputs.videos}}:/test/cypress/videos   \
                                   -v ${{steps.config.outputs.reports}}:/test/cypress/reports   \
                                   ${{ env.DOCKERHUB_REPOSITORY}}:latest
        env:
              CYPRESS_HTTPAUTH_PASSWORD: "${{ steps.azSecret.outputs.HTTP-PASSWORD }}"
              CYPRESS_HTTPAUTH_USERNAME: "${{ steps.azSecret.outputs.HTTP-USERNAME }}"
              CYPRESS_SPEC:              "cypress/integration/${{ matrix.tests }}.spec.js"
        

                
      - name: Upload reports artifact
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{steps.config.outputs.basename }}
          path: |
               ${{steps.config.outputs.videos}}
               ${{steps.config.outputs.screenshots}}
               ${{steps.config.outputs.reports}}
          if-no-files-found: ignore

      - name: Count Failures
        id:  failures
        if: always()
        run: |
            cat ${{steps.config.outputs.reports}}/*.json | jq  -r ".results[].suites[].tests[] | {title , pass} | select(.pass=="false" ) | .title" > /tmp/$$.tmp
            if [[ $(cat /tmp/$$.tmp | wc -l) -gt 0  ]]
            then
                 i=0
                 echo ::set-output name=adverb::""
                 while IFS= read -r line
                 do
                   if [[ $i -gt 10 ]]
                   then
                      echo ::set-output name=adverb::first
                      break
                   fi
                   i=$((i+1))
                   echo ::set-output name=message${i}::"  - ${line}"
                 done <  /tmp/$$.tmp
                 echo ::set-output name=display::${i}
                 echo ::set-output name=number::$(cat /tmp/$$.tmp | wc -l)
                 exit 1
            fi
            exit 0

      - name: Slack Notification
        if: failure()
        uses: rtCamp/action-slack-notify@master
        env:
           SLACK_WEBHOOK: ${{ steps.azSecret.outputs.SLACK-WEBHOOK }}
           SLACK_COLOR:   ${{env.SLACK_ERROR}}
           SLACK_TITLE: 'Failure running Cypress test ${{ matrix.tests}}'
           SLACK_MESSAGE: |
                           ${{steps.failures.outputs.number}} Cypress tests have failed,
                           here are the ${{steps.failures.outputs.adverb}} ${{steps.failures.outputs.display}} failures
                           ${{steps.failures.outputs.message1}}
                           ${{steps.failures.outputs.message2}}
                           ${{steps.failures.outputs.message3}}
                           ${{steps.failures.outputs.message4}}
                           ${{steps.failures.outputs.message5}}
                           ${{steps.failures.outputs.message6}}
                           ${{steps.failures.outputs.message7}}
                           ${{steps.failures.outputs.message8}}
                           ${{steps.failures.outputs.message9}}
                           ${{steps.failures.outputs.message10}}

  Cypress:
    name: ${{github.event.inputs.reference}}
    if: success()
    runs-on: ubuntu-latest
    needs: RunTests
    steps:
       - name: Check Task has Competed
         run: echo "Test matrix has completed"
   
  Failed:
    name: ${{github.event.inputs.reference}}
    if:    failure()
    runs-on: ubuntu-latest
    needs: RunTests
    steps:
       - name: Check Task has Failed
         run: |
               echo "Test matrix has failed"
               exit 1
